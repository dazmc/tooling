#wget https://github.com/bitnami-labs/sealed-secrets/releases/download/<release-tag>/kubeseal-<version>-linux-amd64.tar.gz
wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.18.2/kubeseal-0.18.2-linux-amd64.tar.gz
tar -xvzf kubeseal-<version>-linux-amd64.tar.gz kubeseal
sudo install -m 755 kubeseal /usr/local/bin/kubeseal

flux create source helm sealed-secrets --namespace=kube-system --url=https://bitnami-labs.github.io/sealed-secrets --export > HelmRepository.yaml

https://github.com/bitnami-labs/sealed-secrets/tree/main/helm/sealed-secrets - values available

values.yaml -
commonAnnotations:
  meta.helm.sh/release-namespace: kube-system

flux create hr sealed-secrets --namespace=kube-system --chart=sealed-secrets --source=HelmRepository/sealed-secrets.kube-system  --values=./values.yaml  --export > HelmRelease.yaml

# get the public key
kubeseal --fetch-cert --controller-name=sealed-secrets --controller-namespace=kube-system > pub-cert.pem
# get the private key - do not check into git perhaps add it to KMS using sops lol
kubectl get secret -n kube-system -l sealedsecrets.bitnami.com/sealed-secrets-key -o yaml > master.yaml

# delete the key in the cluster
kubectl delete secret -n kube-system -l sealedsecrets.bitnami.com/sealed-secrets-key

# recover the key into the cluster
kubectl apply -f master.yaml 
kubectl get secret -n kube-system -l sealedsecrets.bitnami.com/sealed-secrets-key


echo -n bar | kubectl create secret generic mysecret --dry-run=client --from-file=foo=/dev/stdin -o yaml >mysecret.yaml
kubeseal --controller-name=sealed-secrets -o yaml < mysecret.yaml > mysealedsecret.yaml
kubeseal --controller-name sealed-secrets <args>

NOTE: controller name on helm install default to sealed-secrets whilst kubeseal uses sealed-secrets-controller
NOTE: following would force correct name for install
helm install sealed-secrets -n kube-system --set-string fullnameOverride=sealed-secrets-controller sealed-secrets/sealed-secrets
