https://cloud.google.com/sdk/docs/install#linux

wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-403.0.0-linux-x86_64.tar.gz
tar zxf google-cloud-cli-403.0.0-linux-x86_64.tar.gz
./google-cloud-sdk/install.sh
./google-cloud-sdk/install.sh --help
./google-cloud-sdk/bin/gcloud init
gcloud components list
gcloud components install [COMPONENT-ID]
gcloud components install kubectl
# https://cloud.google.com/blog/products/containers-kubernetes/kubectl-auth-changes-in-gke
gcloud components install gke-gcloud-auth-plugin
#export USE_GKE_GCLOUD_AUTH_PLUGIN=False >> ~/.bashrc
gcloud components install gke-gcloud-auth-plugin
echo export USE_GKE_GCLOUD_AUTH_PLUGIN=True >> ~/.bashrc
gcloud components update
source ~/.bashrc


gcloud config set project $(gcloud projects list --filter="project_id:playground*" --format="value(project_id)") 
gcloud compute regions list 
gcloud config configurations list 
gcloud config set compute/region europe-west2 
gcloud config set compute/zone europe-west2-a 
gcloud projects list 

gcloud config get-value compute/zone 
gcloud compute zones list 

gcloud compute machine-types list

gcloud auth list 
gcloud auth login
gcloud config set account cloud_user_p_f65a90ce@linuxacademygclabs.com 
gcloud config set account $(gcloud auth list --filter="account:cloud*"  --format="value(account)") 
gcloud services list â€“available 



gcloud services enable container.googleapis.com 


# RAPID, change channel to REGULAR or STABLE 
gcloud container get-server-config --flatten="channels" --filter="channels.channel=RAPID" \
    --format="yaml(channels.channel,channels.validVersions)"

# all available versions in REGION
gcloud container get-server-config --format="yaml(validMasterVersions)"

# RAPID - DEFAULT version in channel, change channel to REGULAR or STABLE 
gcloud container get-server-config --flatten="channels" --filter="channels.channel=RAPID" \
    --format="yaml(channels.channel,channels.defaultVersion)"

# default version in REGION
gcloud container get-server-config --format="yaml(defaultClusterVersion)"


gcloud container clusters create test-alpha --enable-kubernetes-alpha --no-enable-autorepair --no-enable-autoupgrade 

gcloud container clusters get-credentials test-alpha 

gcloud container clusters create test 

# custom cpu and memory
gcloud container clusters create high-mem-pool \
                --machine-type=custom-2-12288

gcloud container clusters create "test" --zone "us-east1-c"  --cluster-version "1.23.5-gke.200" --release-channel "rapid" --machine-type "e2-medium"  --disk-size "100" --scopes  "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" --max-pods-per-node "110" --num-nodes "3" --logging=SYSTEM,WORKLOAD --monitoring=SYSTEM --enable-ip-alias --default-max-pods-per-node "110"  --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver  

gcloud container clusters create "flux" --zone "us-central1-a"  --cluster-version "1.25.0-gke.1100" --release-channel "rapid" --machine-type "e2-medium"  --disk-size "100" --scopes  "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" --max-pods-per-node "110" --num-nodes "3" --logging=SYSTEM,WORKLOAD --monitoring=SYSTEM --enable-ip-alias --default-max-pods-per-node "110"  --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver

gcloud container clusters create "krateo" --zone "us-central1-a"  --cluster-version "1.25.3-gke.800" --release-channel "rapid" --machine-type "e2-standard-2"  --disk-size "100" --scopes  "https://www.googleapis.com/auth/devstorage.read_only","https://www.googleapis.com/auth/logging.write","https://www.googleapis.com/auth/monitoring","https://www.googleapis.com/auth/servicecontrol","https://www.googleapis.com/auth/service.management.readonly","https://www.googleapis.com/auth/trace.append" --max-pods-per-node "110" --num-nodes "3" --logging=SYSTEM,WORKLOAD --monitoring=SYSTEM --enable-ip-alias --default-max-pods-per-node "110"  --addons HorizontalPodAutoscaling,HttpLoadBalancing,GcePersistentDiskCsiDriver

sudo apt install tree 


#ingress
https://kubernetes.github.io/ingress-nginx/deploy/#gce-gke
kubectl create clusterrolebinding cluster-admin-binding \
  --clusterrole cluster-admin \
  --user $(gcloud config get-value account)
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.5.1/deploy/static/provider/cloud/deploy.yaml
